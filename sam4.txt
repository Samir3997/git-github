package com.maybank.ilm.core.swiftmsghandlers;

import static org.junit.Assert.*;
import static org.mockito.Mockito.*;

import com.maybank.ilm.entity.AccountBalanceManagement;
import com.maybank.ilm.repository.AccountBalanceManagementRepository;
import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.test.context.junit4.SpringRunner;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

@RunWith(SpringRunner.class)
public class SomeServiceTest {

    @InjectMocks
    private SomeService someService;

    @Mock
    private AccountBalanceManagementRepository accountBalanceManagementRepository;

    @Before
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testCheckRelatedRefOfMT910() {
        // Given
        LocalDate valueDate = LocalDate.of(2024, 8, 25);
        Long entityAcctMapSkey = 1L;
        List<String> messageTypes = Arrays.asList("TYPE1", "TYPE2");

        List<AccountBalanceManagement> expectedList = Arrays.asList(
            new AccountBalanceManagement(1L, BigDecimal.valueOf(100), "+", 1L, LocalDate.now().atStartOfDay(), valueDate, LocalDate.now(), "TYPE1", "SENDER1", "RECEIVER1", "TRN1", "REF1", "MYR", 'Y'),
            new AccountBalanceManagement(1L, BigDecimal.valueOf(50), "-", 2L, LocalDate.now().atStartOfDay(), valueDate, LocalDate.now(), "TYPE2", "SENDER2", "RECEIVER2", "TRN2", "REF2", "MYR", 'N')
        );

        when(accountBalanceManagementRepository.findByValueDateAndEntityAcctMapSkeyAndMessageTypeIn(valueDate, entityAcctMapSkey, messageTypes))
                .thenReturn(expectedList);

        // When
        List<AccountBalanceManagement> result = someService.checkRelatedRefOfMT910(valueDate, entityAcctMapSkey, messageTypes);

        // Then
        assertNotNull(result);
        assertEquals(2, result.size());
        assertEquals(expectedList, result);
        verify(accountBalanceManagementRepository).findByValueDateAndEntityAcctMapSkeyAndMessageTypeIn(valueDate, entityAcctMapSkey, messageTypes);
    }

    @Test
    public void testCheckRelatedRefOfMT910_NoResults() {
        // Given
        LocalDate valueDate = LocalDate.of(2024, 8, 25);
        Long entityAcctMapSkey = 1L;
        List<String> messageTypes = Arrays.asList("TYPE1", "TYPE2");

        when(accountBalanceManagementRepository.findByValueDateAndEntityAcctMapSkeyAndMessageTypeIn(valueDate, entityAcctMapSkey, messageTypes))
                .thenReturn(Arrays.asList());

        // When
        List<AccountBalanceManagement> result = someService.checkRelatedRefOfMT910(valueDate, entityAcctMapSkey, messageTypes);

        // Then
        assertNotNull(result);
        assertTrue(result.isEmpty());
        verify(accountBalanceManagementRepository).findByValueDateAndEntityAcctMapSkeyAndMessageTypeIn(valueDate, entityAcctMapSkey, messageTypes);
    }
}
