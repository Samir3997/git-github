import static org.junit.jupiter.api.Assertions.assertFalse;
import static org.junit.jupiter.api.Assertions.assertTrue;
import static org.mockito.Mockito.*;

import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.maybank.ilm.core.dao.AccountBalanceMgmtRepo;
import com.maybank.ilm.entity.AccountBalanceManagement;

public class MXMsgHandlerAbstractImplTest {

    @Mock
    private AccountBalanceMgmtRepo mgmtRepo;

    @InjectMocks
    private MXMsgHandlerAbstractImpl mxMsgHandler;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testCheckRelatedRefForNostro_FoundRelatedRef() {
        // Arrange
        LocalDate valueDate = LocalDate.now();
        Long entityAcctMapSkey = 1L;
        String relatedRef = "ABC123";

        AccountBalanceManagement matchingEntry = new AccountBalanceManagement();
        matchingEntry.setSendersRef(relatedRef);
        
        List<AccountBalanceManagement> managements = Arrays.asList(matchingEntry);
        
        when(mgmtRepo.findByValueDateAndEntityAcctMapSkeyAndMessageTypeIn(eq(valueDate), eq(entityAcctMapSkey), anyList()))
            .thenReturn(managements);

        // Act
        boolean result = mxMsgHandler.checkRelatedRefForNostro(valueDate, entityAcctMapSkey, relatedRef);

        // Assert
        assertTrue(result);
        verify(mgmtRepo, times(1)).saveAll(managements);
    }

    @Test
    void testCheckRelatedRefForNostro_NotFoundRelatedRef() {
        // Arrange
        LocalDate valueDate = LocalDate.now();
        Long entityAcctMapSkey = 1L;
        String relatedRef = "ABC123";

        AccountBalanceManagement nonMatchingEntry = new AccountBalanceManagement();
        nonMatchingEntry.setSendersRef("XYZ456");
        
        List<AccountBalanceManagement> managements = Arrays.asList(nonMatchingEntry);
        
        when(mgmtRepo.findByValueDateAndEntityAcctMapSkeyAndMessageTypeIn(eq(valueDate), eq(entityAcctMapSkey), anyList()))
            .thenReturn(managements);

        // Act
        boolean result = mxMsgHandler.checkRelatedRefForNostro(valueDate, entityAcctMapSkey, relatedRef);

        // Assert
        assertFalse(result);
        verify(mgmtRepo, times(0)).saveAll(managements);
    }
}
