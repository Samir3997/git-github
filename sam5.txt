public class ComponentDefnDto {
    private String vCompDefnName;
    private Long vCompDefnId;
    private Long nCompDefnId;

    public ComponentDefnDto(String vCompDefnName, Long vCompDefnId, Long nCompDefnId) {
        this.vCompDefnName = vCompDefnName;
        this.vCompDefnId = vCompDefnId;
        this.nCompDefnId = nCompDefnId;
    }

    // Getters and Setters (if needed)
}




import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.CrudRepository;
import org.springframework.stereotype.Repository;
import java.util.List;

@Repository
public interface ComponentDefnRepository extends CrudRepository<Object, Long> {

    @Query(value = "SELECT v_comp_defn_nme AS vCompDefnName, " +
                   "v_comp_defn_id AS vCompDefnId, " +
                   "n_comp_defn_id AS nCompDefnId " +
                   "FROM component_defn",
           nativeQuery = true)
    List<ComponentDefnDto> findAllComponents();
}




import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.List;

@Service
public class ComponentDefnService {

    @Autowired
    private ComponentDefnRepository repository;

    public List<ComponentDefnDto> getAllComponents() {
        return repository.findAllComponents();
    }
}




import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;
import java.util.List;

@RestController
public class ComponentDefnController {

    @Autowired
    private ComponentDefnService service;

    @GetMapping("/components")
    public List<ComponentDefnDto> getComponents() {
        return service.getAllComponents();
    }
}
