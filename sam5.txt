import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import java.util.Arrays;
import java.util.List;

import static org.mockito.ArgumentMatchers.anyString;
import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
public class YourServiceTest {

    @Mock
    private EntityManager em;

    @Mock
    private TypedQuery<?> query;

    @InjectMocks
    private YourService yourService; // Replace with your actual service class

    @BeforeEach
    public void setUp() {
        when(em.createNamedQuery(anyString(), eq(EntityAccountMapDefinition.class))).thenReturn(query);
    }

    @Test
    public void testDeleteEntityAcctMap() {
        // Given
        List<Long> skeys = Arrays.asList(1L, 2L, 3L);
        when(query.setParameter("defnSkeys", skeys)).thenReturn(query);
        when(query.executeUpdate()).thenReturn(3); // Assuming 3 records are deleted

        // When
        yourService.deleteEntityAcctMap(skeys);

        // Then
        verify(em).createNamedQuery("DELETEENTITYACCTDEFNSBYSKEYS", EntityAccountMapDefinition.class);
        verify(query).setParameter("defnSkeys", skeys);
        verify(query).executeUpdate();
    }
}
