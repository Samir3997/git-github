package com.maybank.ilm.core.dao;

import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import java.util.Arrays;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.maybank.ilm.entity.paymentmessagedetails.MetaFileInfo;

public class PaymentMessageDaoImplTest {

    @InjectMocks
    private PaymentMessageDaoImpl paymentMessageDao;

    @Mock
    private EntityManager em;

    @Mock
    private Query query;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testGetMetaFileInfo() {
        // Arrange
        MetaFileInfo metaFileInfo1 = new MetaFileInfo(); // Create sample MetaFileInfo objects
        MetaFileInfo metaFileInfo2 = new MetaFileInfo();
        List<MetaFileInfo> expectedList = Arrays.asList(metaFileInfo1, metaFileInfo2);

        // Mock the behavior of EntityManager and Query
        when(em.createNamedQuery("GETMETAFILEINFO", MetaFileInfo.class)).thenReturn(query);
        when(query.getResultList()).thenReturn(expectedList);

        // Act
        List<MetaFileInfo> result = paymentMessageDao.getMetaFileInfo();

        // Assert
        assertNotNull(result);
        assertEquals(2, result.size());
        assertSame(metaFileInfo1, result.get(0));
        assertSame(metaFileInfo2, result.get(1));

        // Verify interactions
        verify(em).createNamedQuery("GETMETAFILEINFO", MetaFileInfo.class);
        verify(query).getResultList();
    }
}
