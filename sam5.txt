import static org.junit.jupiter.api.Assertions.assertEquals;

import java.time.LocalDateTime;

import org.junit.jupiter.api.Test;

public class DateUtilTest {

    @Test
    public void testGetLocalDateTimeFromLongFiles() {
        // Test case 1: A valid date modified value
        long dateModified1 = 1695527200000L; // 2023-11-21 18:00:00 UTC
        LocalDateTime expectedDateTime1 = LocalDateTime.of(2023, 11, 21, 18, 0);
        LocalDateTime actualDateTime1 = DateUtil.getLocalDateTimeFromLongFiles(dateModified1);
        assertEquals(expectedDateTime1, actualDateTime1);

        // Test case 2: A date modified value with milliseconds
        long dateModified2 = 1695527200123L; // 2023-11-21 18:00:00 UTC with milliseconds
        LocalDateTime expectedDateTime2 = LocalDateTime.of(2023, 11, 21, 18, 0); // Milliseconds are ignored
        LocalDateTime actualDateTime2 = DateUtil.getLocalDateTimeFromLongFiles(dateModified2);
        assertEquals(expectedDateTime2, actualDateTime2);

        // Test case 3: An invalid date modified value
        long dateModified3 = -1L;
        try {
            DateUtil.getLocalDateTimeFromLongFiles(dateModified3);
            // If the code reaches here, the test case has failed
            fail("Expected an exception to be thrown");
        } catch (Exception e) {
            // The exception is expected
        }
    }
}
