@Test
public void testGetKAccountRedemptionEntries_NoLatestAggr() {
    // Arrange
    Long countrySkey = 1L;
    Long entitySkey = 2L;
    Long currSkey = 3L;
    LocalDate valueDt = LocalDate.now();
    BigDecimal msgAmnt = new BigDecimal("100.00");
    Long mainAcctEamSkey = 4L;
    Long kAcctEamSkey = 5L;

    List<KAccountConfiguration> kAcctConfigs = new ArrayList<>();
    KAccountConfiguration kAccountConfiguration = new KAccountConfiguration();
    kAccountConfiguration.setTrancheSize(new BigDecimal("50.00"));
    kAcctConfigs.add(kAccountConfiguration);

    when(kAccountConfigRepo.findByCountrySkeyAndEntitySkeyAndCurrencySkeyAndEffectiveFromLessThanEqualAndEffectiveToGreaterThanEqual(countrySkey, entitySkey, currSkey, valueDt, valueDt)).thenReturn(kAcctConfigs);
    when(aggrRepo.getLastUpdatedAcctBalAggr(kAcctEamSkey, valueDt)).thenReturn(null);

    // Act
    Map<Long, BigDecimal> amountsMap = mxMsgHandlerAbstractImpl.getKAccountRedemptionEntries(countrySkey, entitySkey, currSkey, valueDt, msgAmnt, mainAcctEamSkey, kAcctEamSkey);

    // Assert
    assertEquals(0, amountsMap.size());

    // Additional assertions to check specific conditions
    assertEquals(0, kAcctConfigs.size(), "kAcctConfigs should be empty");
    assertNull(latestKAcctAggr, "latestKAcctAggr should be null");
}
