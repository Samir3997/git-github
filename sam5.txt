import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import java.util.Arrays;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

import com.maybank.ilm.dto.RequestAnalyticsDTO;
import com.maybank.ilm.entity.SRRConfiguration;

public class SRRAccountMgmtDmplTest {

    @InjectMocks
    private SRRAccountMgmtDmpl srrAccountMgmtDmpl;

    @Mock
    private EntityManager em;

    @Mock
    private CriteriaBuilder criteriaBuilder;

    @Mock
    private CriteriaQuery<SRRConfiguration> criteriaQuery;

    @Mock
    private Root<SRRConfiguration> root;

    @Mock
    private javax.persistence.TypedQuery<SRRConfiguration> typedQuery;

    @BeforeEach
    public void setUp() {
        MockitoAnnotations.initMocks(this);
    }

    @Test
    public void testGetSrrConfigByType() {
        // Mocking the behavior of EntityManager, CriteriaBuilder, and CriteriaQuery
        when(em.getCriteriaBuilder()).thenReturn(criteriaBuilder);
        when(criteriaBuilder.createQuery(SRRConfiguration.class)).thenReturn(criteriaQuery);
        when(criteriaQuery.from(SRRConfiguration.class)).thenReturn(root);

        RequestAnalyticsDTO analyticsDTO = new RequestAnalyticsDTO();
        analyticsDTO.setCountrySkeys(Arrays.asList(1L, 2L));
        analyticsDTO.setEntitySkeys(Arrays.asList(3L));
        analyticsDTO.setCurrencySkeys(Arrays.asList(4L));
        analyticsDTO.setDefinationType("EL");

        Predicate countryPredicate = mock(Predicate.class);
        Predicate entityPredicate = mock(Predicate.class);
        Predicate currencyPredicate = mock(Predicate.class);
        Predicate definationTypePredicate = mock(Predicate.class);

        when(root.get("countrySkey")).thenReturn(mock(javax.persistence.criteria.Path.class));
        when(root.get("entitySkey")).thenReturn(mock(javax.persistence.criteria.Path.class));
        when(root.get("currencySkey")).thenReturn(mock(javax.persistence.criteria.Path.class));
        when(root.get("defnType")).thenReturn(mock(javax.persistence.criteria.Path.class));

        when(criteriaBuilder.equal(root.get("defnType"), "EL")).thenReturn(definationTypePredicate);
        when(root.get("countrySkey").in(analyticsDTO.getCountrySkeys())).thenReturn(countryPredicate);
        when(root.get("entitySkey").in(analyticsDTO.getEntitySkeys())).thenReturn(entityPredicate);
        when(root.get("currencySkey").in(analyticsDTO.getCurrencySkeys())).thenReturn(currencyPredicate);

        // Add predicates to the list
        when(criteriaQuery.where(any(Predicate[].class))).thenReturn(criteriaQuery);

        when(em.createQuery(criteriaQuery)).thenReturn(typedQuery);
        when(typedQuery.getResultList()).thenReturn(Arrays.asList(new SRRConfiguration()));

        // Test the method
        List<SRRConfiguration> result = srrAccountMgmtDmpl.getSrrConfigByType(analyticsDTO);

        // Verify the interactions and the result
        assertNotNull(result);
        assertEquals(1, result.size());
    }
}
