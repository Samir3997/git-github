package com.maybank.cac.controller;

import java.util.List;

package com.maybank.cac.chatbox;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class ChatboxApplication {

	public static void main(String[] args) {
		System.out.println("Samir");
		SpringApplication.run(ChatboxApplication.class, args);
	}

}





import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.maybank.cac.service.ComponentPortfolioService;

@RestController
@RequestMapping("/api")
public class ComponentPortfolioController {
	   @Autowired
	    private ComponentPortfolioService componentPortfolioService;

	    @GetMapping("/search")
	    public List<?> search(@RequestParam String type, @RequestParam(required = false) String formula) {
	        return componentPortfolioService.getComponentOrPortfolio(type, formula);
	    }

}




package com.maybank.cac.dao;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.maybank.cac.dto.ComponentDto;
@Repository
public interface ComponentRepository extends JpaRepository<ComponentDto, Long>{
	@Query(value = "SELECT cd.V_COMP_DEFN_NME as vCompDefnNme, " + "cd.V_COMP_DEFN_ID as vCompDefnId, "
			+ "cd.N_COMP_DEFN_ID as nCompDefnId " + "FROM COMPONENT_DEFN cd "
			+ "JOIN COMPONENT_REQUEST_MEASURES crm ON crm.N_COMP_DEFN_ID = cd.N_COMP_DEFN_ID "
			+ "WHERE crm.V_COMP_REQ_MEASURE_FORMULA LIKE %:formula%", nativeQuery = true)
	List<ComponentDto> findComponentByFormula(@Param("formula") String formula);

	@Query(value = "SELECT cd.V_COMP_DEFN_NME as vCompDefnNme, " + "cd.V_COMP_DEFN_ID as vCompDefnId, "
			+ "cd.N_COMP_DEFN_ID as nCompDefnId " + "FROM COMPONENT_DEFN cd "
			+ "JOIN COMPONENT_FILTER_DEFN cfd ON cfd.N_COMP_DEFN_ID = cd.N_COMP_DEFN_ID "
			+ "JOIN COMPONENT_REQUEST_MEASURES crm ON crm.N_COMP_DEFN_ID = cfd.N_COMP_DEFN_ID "
			+ "WHERE crm.V_COMP_REQ_MEASURE_FORMULA LIKE %:formula%", nativeQuery = true)
	List<ComponentDto> findComponentWithFilterByFormula(@Param("formula") String formula);

	@Query(value = "SELECT cd.V_COMP_DEFN_NME as vCompDefnNme, " + "cd.V_COMP_DEFN_ID as vCompDefnId, "
			+ "cd.N_COMP_DEFN_ID as nCompDefnId " + "FROM COMPONENT_DEFN cd "
			+ "JOIN COMPONENT_FILTER_DEFN cfd ON cfd.N_COMP_DEFN_ID = cd.N_COMP_DEFN_ID "
			+ "JOIN COMPONENT_REQUEST_MEASURES crm ON crm.N_COMP_DEFN_ID = cfd.N_COMP_DEFN_ID "
			+ "JOIN COMPONENT_HIERARCHY_DEFN chd ON chd.N_COMP_DEFN_ID = cd.N_COMP_DEFN_ID "
			+ "WHERE crm.V_COMP_REQ_MEASURE_FORMULA LIKE %:formula%", nativeQuery = true)
	List<ComponentDto> findComponentWithHierarchyByFormula(@Param("formula") String formula);

}






package com.maybank.cac.dao;

import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.stereotype.Repository;

import com.maybank.cac.dto.PortfolioDto;
@Repository
public interface PortfolioRepository extends JpaRepository<PortfolioDto, Long>{

	@Query(value = "SELECT pd.V_PORTFOLIO_DEFN_NME as vPortfolioDefnNme, "
			+ "pd.V_PORTFOLIO_DEFN_ID as vPortfolioDefnId, " + "pd.N_PORTFOLIO_DEFN_ID as nPortfolioDefnId "
			+ "FROM PORTFOLIO_DEFN pd "
			+ "JOIN PORTFOLIO_REQUEST_MEASURES prm ON prm.N_PORTFOLIO_DEFN_ID = pd.N_PORTFOLIO_DEFN_ID", nativeQuery = true)
	List<PortfolioDto> findPortfolioWithMeasures();

	@Query(value = "SELECT pd.V_PORTFOLIO_DEFN_NME as vPortfolioDefnNme, "
			+ "pd.V_PORTFOLIO_DEFN_ID as vPortfolioDefnId, " + "pd.N_PORTFOLIO_DEFN_ID as nPortfolioDefnId "
			+ "FROM PORTFOLIO_DEFN pd "
			+ "JOIN PORTFOLIO_FILTER_DEFN pfd ON pfd.N_PORTFOLIO_DEFN_ID = pd.N_PORTFOLIO_DEFN_ID", nativeQuery = true)
	List<PortfolioDto> findPortfolioWithFilters();

}




package com.maybank.cac.dto;

public class ComponentDto {
	private String vCompDefnNme;
	private String vCompDefnId;
	private Long nCompDefnId;

	public ComponentDto(String vCompDefnNme, String vCompDefnId, Long nCompDefnId) {
		this.vCompDefnNme = vCompDefnNme;
		this.vCompDefnId = vCompDefnId;
		this.nCompDefnId = nCompDefnId;
	}

	public String getvCompDefnNme() {
		return vCompDefnNme;
	}

	public void setvCompDefnNme(String vCompDefnNme) {
		this.vCompDefnNme = vCompDefnNme;
	}

	public String getvCompDefnId() {
		return vCompDefnId;
	}

	public void setvCompDefnId(String vCompDefnId) {
		this.vCompDefnId = vCompDefnId;
	}

	public Long getnCompDefnId() {
		return nCompDefnId;
	}

	public void setnCompDefnId(Long nCompDefnId) {
		this.nCompDefnId = nCompDefnId;
	}
}




package com.maybank.cac.dto;

public class PortfolioDto {
	private String vPortfolioDefnNme;
	private String vPortfolioDefnId;
	private Long nPortfolioDefnId;

	public PortfolioDto(String vPortfolioDefnNme, String vPortfolioDefnId, Long nPortfolioDefnId) {
		this.vPortfolioDefnNme = vPortfolioDefnNme;
		this.vPortfolioDefnId = vPortfolioDefnId;
		this.nPortfolioDefnId = nPortfolioDefnId;
	}

	public String getvPortfolioDefnNme() {
		return vPortfolioDefnNme;
	}

	public void setvPortfolioDefnNme(String vPortfolioDefnNme) {
		this.vPortfolioDefnNme = vPortfolioDefnNme;
	}

	public String getvPortfolioDefnId() {
		return vPortfolioDefnId;
	}

	public void setvPortfolioDefnId(String vPortfolioDefnId) {
		this.vPortfolioDefnId = vPortfolioDefnId;
	}

	public Long getnPortfolioDefnId() {
		return nPortfolioDefnId;
	}

	public void setnPortfolioDefnId(Long nPortfolioDefnId) {
		this.nPortfolioDefnId = nPortfolioDefnId;
	}
}





package com.maybank.cac.service;

import java.util.List;
public interface ComponentPortfolioService {
	 List<?> getComponentOrPortfolio(String type, String formula);

}




package com.maybank.cac.service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.maybank.cac.dao.ComponentRepository;
import com.maybank.cac.dao.PortfolioRepository;
import com.maybank.cac.dto.ComponentDto;
@Service
public class ComponentPortfolioServiceImpl implements ComponentPortfolioService{
	@Autowired
    private ComponentRepository componentRepository;

    @Autowired
    private PortfolioRepository portfolioRepository;

    @Override
    public List<?> getComponentOrPortfolio(String type, String formula) {
        if ("component".equalsIgnoreCase(type)) {
            List<ComponentDto> results = new ArrayList<>();

            List<ComponentDto> componentsByFormula = componentRepository.findComponentByFormula(formula);
            results.addAll(componentsByFormula);

            List<ComponentDto> componentsWithFilter = componentRepository.findComponentWithFilterByFormula(formula);
            results.addAll(componentsWithFilter);

            List<ComponentDto> componentsWithHierarchy = componentRepository.findComponentWithHierarchyByFormula(formula);
            results.addAll(componentsWithHierarchy);

            return results;
        } 
        return null;
    }
}







spring.application.name=chatbox
spring.datasource.url=jdbc:oracle:thin:@172.31.120.61:1521:ODCQA
spring.datasource.username=CARISMA_CAC_QA
spring.datasource.password=CARISMA_CAC_QA#123
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect
spring.jpa.show-sql=true




<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.18</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.maybank.cac</groupId>
	<artifactId>chatbox</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>chatbox</name>
	<description>Demo project for Spring Boot</description>
	<url/>
	<licenses>
		<license/>
	</licenses>
	<developers>
		<developer/>
	</developers>
	<scm>
		<connection/>
		<developerConnection/>
		<tag/>
		<url/>
	</scm>
	<properties>
		<java.version>8</java.version>
	</properties>
	<dependencies>
	    <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	<dependency>
		<groupId>com.oracle.database.jdbc</groupId>
		<artifactId>ojdbc8</artifactId>
		<version>19.19.0.0</version>
	</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>






