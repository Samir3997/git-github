private void updateBalances(Long eamSkey, LocalDate valueDate, BigDecimal amount, Long trackerID,
			LocalDate currentDate) {
		LocalDate prevDate = currentDate.minusDays(1);
		valueDate = DateUtil.isWeekend(prevDate) ? prevDate : valueDate;
		AccountBalanceAggregation valueDatedclosingBal = aggrRepo
				.findByEntityAcctMapSkeyAndValueDateAndOpeningClosingBalIndAndAggrInd(eamSkey, valueDate,
						ILMCoreConstants.CLOSINGBALANCE, ILMCoreConstants.OTHERS);
		AccountBalanceAggregation nextValueDatedOpeningBal = aggrRepo
				.findByEntityAcctMapSkeyAndValueDateAndOpeningClosingBalIndAndAggrInd(eamSkey, valueDate.plusDays(1l),
						ILMCoreConstants.OPENINGBALANCE, ILMCoreConstants.OTHERS);
		if(!ObjectUtils.isEmpty(nextValueDatedOpeningBal)) {
			BigDecimal futureDatedTotalAmnt = mgmtRepo.getFutureDatedTotalAmountByMessageTypeInAndEntityAcctMapSkeyAndValueDate
					(Arrays.asList(ILMCoreConstants.MESSAGETYPE103, ILMCoreConstants.MESSAGETYPE202), eamSkey, valueDate.plusDays(1l));
			BigDecimal finalClosingBal = futureDatedTotalAmnt != null ? amount.subtract(futureDatedTotalAmnt) : amount;
			valueDatedclosingBal.setTotalAmnt(finalClosingBal);
			valueDatedclosingBal.setTrackerID(trackerID);
			nextValueDatedOpeningBal.setTotalAmnt(finalClosingBal);
			nextValueDatedOpeningBal.setTrackerID(trackerID);
			List<AccountBalanceAggregation> nextDatedAggrs = aggrRepo
					.findByValueDateAndEntityAcctMapSkeyOrderByBusinessDtTimeDesc(valueDate.plusDays(1l), eamSkey);
			if (!CollectionUtils.isEmpty(nextDatedAggrs)) {
				for (AccountBalanceAggregation aggr : nextDatedAggrs) {
					if (aggr.getOpeningClosingBalInd() == null) {
						BigDecimal currAmnt = aggr.getTotalAmnt();
						aggr.setTotalAmnt(currAmnt.add(finalClosingBal));
					}
				}
			}
			aggrRepo.saveAll(nextDatedAggrs);
			aggrRepo.saveAndFlush(valueDatedclosingBal);
			aggrRepo.saveAndFlush(nextValueDatedOpeningBal);
		}
		
	}
