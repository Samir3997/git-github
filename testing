package com.maybank.ilm.embeddable;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import java.math.BigDecimal;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class Block4Tag95LPRTest {

    private Block4Tag95LPR block4Tag95LPR;

    @BeforeEach
    public void setUp() {
        block4Tag95LPR = new Block4Tag95LPR();
    }

    @Test
    public void testGettersAndSetters() {
        // Setting values
        String qualifierL = "QualifierL";
        block4Tag95LPR.setBlock4Tag95LQualifier(qualifierL);
        
        String leIdCode = "LEIDCode";
        block4Tag95LPR.setBlock4Tag95LLeIdCode(leIdCode);
        
        BigDecimal leIdNumber = new BigDecimal("1234567890");
        block4Tag95LPR.setBlock4Tag95LLeIdNumber(leIdNumber);
        
        String qualifierP = "QualifierP";
        block4Tag95LPR.setBlock4Tag95PQualifier(qualifierP);
        
        String bicCode = "BICCode";
        block4Tag95LPR.setBlock4Tag95PBic(bicCode);
        
        String qualifierR = "QualifierR";
        block4Tag95LPR.setBlock4Tag95RQualifier(qualifierR);
        
        String dataSource = "DataSource";
        block4Tag95LPR.setBlock4Tag95RDataSrc(dataSource);
        
        String proprieCode = "ProprieCode";
        block4Tag95LPR.setBlock4Tag95RProprieCode(proprieCode);

        // Asserting values
        assertEquals(qualifierL, block4Tag95LPR.getBlock4Tag95LQualifier());
        assertEquals(leIdCode, block4Tag95LPR.getBlock4Tag95LLeIdCode());
        assertEquals(leIdNumber, block4Tag95LPR.getBlock4Tag95LLeIdNumber());
        assertEquals(qualifierP, block4Tag95LPR.getBlock4Tag95PQualifier());
        assertEquals(bicCode, block4Tag95LPR.getBlock4Tag95PBic());
        assertEquals(qualifierR, block4Tag95LPR.getBlock4Tag95RQualifier());
        assertEquals(dataSource, block4Tag95LPR.getBlock4Tag95RDataSrc());
        assertEquals(proprieCode, block4Tag95LPR.getBlock4Tag95RProprieCode());
    }
}
