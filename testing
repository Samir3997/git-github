http://10.172.120.19:8013/ilm-web/singleDayhourly

{"countrySkey":1,"currencySkey":1,"entitySkey":1,"fromDate":"01-10-2024","fromTime":"01-10-2024 10:56:00","toTime":"01-10-2024 00:00:00","throughputFlag":"OutWard","entityAccountType":"Main Account","messageTypeList":["900","204","545"]}

{
    "timeSpendsInSeconds": 1,
    "status": "SUCCESS",
    "serviceName": "averageTRNPayment",
    "t": [
        {
            "amount": 21085.75,
            "dateString": "8:00 AM",
            "ratio": 100.00,
            "rangeAmount": null
        }
    ]
}



@Controller
@RequestMapping("/")
public class PaymentPositionController {
@PostMapping(value="/singleDayhourly")
	@ResponseBody
	@CrossOrigin("${cors.urls}")
	public ResponseEntity<CommonResponseEntity<List<SingleDayHorlyThroughPutDTO>>> singleDayHourlyThroughPut(@RequestBody PaymentMessageParamsDTO paramsDTO){
		List<SingleDayHorlyThroughPutDTO> throughputHourly=paymentPos.singleDayHourly(paramsDTO);
		LOGGER.info("PaymentPositionController {} singleDayHourlyThroughPut",paramsDTO);
		return new ResponseEntity<>(new CommonResponseEntity<List<SingleDayHorlyThroughPutDTO>>(1l, "SUCCESS", "averageTRNPayment",throughputHourly),HttpStatus.OK);
	}
}

public interface PaymentPositionService {
public List<SingleDayHorlyThroughPutDTO> singleDayHourly(PaymentMessageParamsDTO paramsDTO);
}

@Service
public class PaymentPositionServiceImpl implements PaymentPositionService {
@Override
	public List<SingleDayHorlyThroughPutDTO> singleDayHourly(PaymentMessageParamsDTO paramsDTO) {
		List<EntityAccountMapDefinition> entityDefn = new ArrayList();
		if(paramsDTO.getNostroBankSkey()==null) {
			entityDefn = eamRepo.findByEntitySkeyAndAccountType(paramsDTO.getEntitySkey(),paramsDTO.getEntityAccountType());
		}
		else {
			entityDefn = eamRepo.findByEntityAcctMapSkey(paramsDTO.getNostroBankSkey());
		}
		List<LocalDate> holidaysList = holidayMasterRepo.getHolidayDates(paramsDTO.getFromTime().toLocalDate(), paramsDTO.getToTime().toLocalDate(), paramsDTO.getCurrencySkey());
		if(CollectionUtils.isEmpty(holidaysList)) {
			holidaysList.add(LocalDate.now().plusDays(1));
		}
		List<SingleDayHorlyThroughPutDTO> hourlySumAmt = new ArrayList<>();
		if (entityDefn.get(0) != null) {
			Long entitySkey = entityDefn.get(0).getEntityAcctMapSkey();
			BigDecimal tillAmt = BigDecimal.ZERO;
			BigDecimal totalAmt = BigDecimal.ONE;
			System.out.println(entitySkey);
			if (paramsDTO.getThroughputFlag().equals(ILMCoreConstants.outwardThroughtout)) {
				hourlySumAmt = paymentMessageDetailsRepo.getThroughPutHourlyOutWardData(paramsDTO.getFromTime(),
						paramsDTO.getToTime(), entitySkey, holidaysList, paramsDTO.getMessageTypeList());
			} else {
				hourlySumAmt = paymentMessageDetailsRepo.getThroughPutHourlyInwardData(paramsDTO.getFromTime(),
						paramsDTO.getToTime(), entitySkey ,holidaysList, paramsDTO.getMessageTypeList());
				System.out.println("form Inward" + hourlySumAmt);
			}

		}
		if (hourlySumAmt.size() != 0) {
			hourlySumAmt = modifiedDto(hourlySumAmt, paramsDTO.getFromTime());
		} else {
			hourlySumAmt = null;
		}

		return hourlySumAmt;
	}
}
