import static org.junit.jupiter.api.Assertions.assertEquals;

import java.time.LocalDateTime;

import org.junit.jupiter.api.Test;

public class MTBlock2Test {

    @Test
    public void testMTBlock2() {
        // Create an instance of MTBlock2
        MTBlock2 block2 = new MTBlock2();

        // Set values
        block2.setBlock2InOutInd("In");
        block2.setBlock2SenderInTime("12:00:00");
        block2.setBlock2MIRDate("2024-11-01");
        block2.setBlock2MIRLogicalTerminal("Terminal123");
        block2.setBlock2MIRSessNum("Session1");
        block2.setBlock2MIRSeqNum("Seq1");
        block2.setBlock2ReceiverOutDate("2024-11-02");
        block2.setBlock2ReceiverOutTime("12:30:00");
        block2.setBlock2MessagePriority("High");
        block2.setBlock2ReceiverAddr("ReceiverAddress");
        block2.setBlock2DeliveryMonitor("Monitor1");
        block2.setBlock2OBSPeriod("Period1");
        block2.setSenderTimeStamp(LocalDateTime.of(2024, 11, 1, 12, 0));
        block2.setReceiverTimeStamp(LocalDateTime.of(2024, 11, 2, 12, 30));

        // Assert values
        assertEquals("In", block2.getBlock2InOutInd());
        assertEquals("12:00:00", block2.getBlock2SenderInTime());
        assertEquals("2024-11-01", block2.getBlock2MIRDate());
        assertEquals("Terminal123", block2.getBlock2MIRLogicalTerminal());
        assertEquals("Session1", block2.getBlock2MIRSessNum());
        assertEquals("Seq1", block2.getBlock2MIRSeqNum());
        assertEquals("2024-11-02", block2.getBlock2ReceiverOutDate());
        assertEquals("12:30:00", block2.getBlock2ReceiverOutTime());
        assertEquals("High", block2.getBlock2MessagePriority());
        assertEquals("ReceiverAddress", block2.getBlock2ReceiverAddr());
        assertEquals("Monitor1", block2.getBlock2DeliveryMonitor());
        assertEquals("Period1", block2.getBlock2OBSPeriod());
        assertEquals(LocalDateTime.of(2024, 11, 1, 12, 0), block2.getSenderTimeStamp());
        assertEquals(LocalDateTime.of(2024, 11, 2, 12, 30), block2.getReceiverTimeStamp());
    }
}
