package com.maybank.ilm.core.util;

import java.math.BigDecimal;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

public class ConversionUtil {

	private static final Logger LOGGER = LogManager.getLogger(ConversionUtil.class);
	private ConversionUtil() {
		throw new AssertionError("Instantiating utility class.");
	}

	public static BigDecimal convertStrToBigDecimal(String sAmount) {
		if (sAmount != null) {
			String sDotAmount = sAmount.replaceAll(ILMCoreConstants.COMMA, ILMCoreConstants.DOT);
			return BigDecimal.valueOf(Double.parseDouble(sDotAmount)).setScale(2, BigDecimal.ROUND_HALF_EVEN);
		}
		return null;
	}

	public static String asJsonString(final Object obj) {
		ObjectMapper mapper = new ObjectMapper();
		String requestJson = null;
		try {
			requestJson = mapper.writeValueAsString(obj);
		} catch (JsonProcessingException e) {
			LOGGER.error("error during conversion"+e);
		}
		return requestJson;

	}
}
