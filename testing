http://10.172.120.19:8013/ilm-web/getentityaccmapdefns?countrySkeys=1&entitySkeys=1&currencySkeys=1


countrySkeys=1&entitySkeys=1&currencySkeys=1

{
    "timeSpendsInSeconds": 1,
    "status": "SUCCESS",
    "serviceName": "getEntityAcctMapByDims",
    "t": [
        {
            "entityAcctMapSkey": 1,
            "accountNumber": "MY65BNMA1554010273",
            "accountName": "Conv cash main account",
            "accountType": "Main Account",
            "countrySkey": 1,
            "entitySkey": 1,
            "currencySkey": 1,
            "minBalance": null,
            "createdBy": "00076764",
            "entityIdentifier": "MBBEMYKL",
            "nostroBankName": null,
            "nostroInd": "N",
            "typeOfNostroAgent": null,
            "sweepingAmountCalculationInd": null,
            "projectedAmountCalculationInd": "Y"
        },
        {
            "entityAcctMapSkey": 2,
            "accountNumber": "MY51BNMA1556010277",
            "accountName": "Conv cash SRR account",
            "accountType": "SRR Account",
            "countrySkey": 1,
            "entitySkey": 1,
            "currencySkey": 1,
            "minBalance": null,
            "createdBy": "00076764",
            "entityIdentifier": "MBBEMYKL",
            "nostroBankName": null,
            "nostroInd": "N",
            "typeOfNostroAgent": null,
            "sweepingAmountCalculationInd": null,
            "projectedAmountCalculationInd": "Y"
        },
        {
            "entityAcctMapSkey": 3,
            "accountNumber": "MY52BNMABSR1556010277",
            "accountName": "Conv Securities SRR account",
            "accountType": "SRR Securities Account",
            "countrySkey": 1,
            "entitySkey": 1,
            "currencySkey": 1,
            "minBalance": null,
            "createdBy": "00076764",
            "entityIdentifier": "MBBEMYKL",
            "nostroBankName": null,
            "nostroInd": "N",
            "typeOfNostroAgent": null,
            "sweepingAmountCalculationInd": null,
            "projectedAmountCalculationInd": "Y"
        },
        {
            "entityAcctMapSkey": 4,
            "accountNumber": "MY43BNMAK1554010273",
            "accountName": "Conv K account",
            "accountType": "K Account",
            "countrySkey": 1,
            "entitySkey": 1,
            "currencySkey": 1,
            "minBalance": null,
            "createdBy": "00076764",
            "entityIdentifier": "MBBEMYKL",
            "nostroBankName": null,
            "nostroInd": "N",
            "typeOfNostroAgent": null,
            "sweepingAmountCalculationInd": null,
            "projectedAmountCalculationInd": "Y"
        }
    ]
}




@Controller
@RequestMapping("/")
public class EntityAccountMapController {
@GetMapping(value="/getentityaccmapdefns")
	@ResponseBody
	@CrossOrigin("${cors.urls}")
	public ResponseEntity<CommonResponseEntity<List<EntityAccountMapDefinition>>> getEntityAcctMapByDims(@RequestParam List<Long> countrySkeys, @RequestParam List<Long> entitySkeys, @RequestParam List<Long> currencySkeys) {
		LOGGER.info("EntityAccountMapController {} getEntityAcctMapByDims",entitySkeys);
		List<EntityAccountMapDefinition> definitions = mappingService.getEntityAcctMapByDims(countrySkeys, entitySkeys, currencySkeys);
		return new ResponseEntity<>(new CommonResponseEntity<List<EntityAccountMapDefinition>>(1l, success, "getEntityAcctMapByDims", definitions),HttpStatus.OK);
	}

}

public interface EntityAccountMappingService {

	public List<EntityAccountMapDefinition> getEntityAcctMapByDims(List<Long> countrySkeys, List<Long> entitySkeys, List<Long> currencySkeys); 
}

@Service
public class EntityAccountMappingServiceImpl implements EntityAccountMappingService{
@Override
	@Find(arguments= {"CountryId","List EntityId","ListCurrencyId"},type="JSON",comment="entity_by_dim")
	@FindNormEx
	public List<EntityAccountMapDefinition> getEntityAcctMapByDims(List<Long> countrySkeys, List<Long> entitySkeys, List<Long> currencySkeys){
		return mappingDao.getEntityAcctMapByDims(countrySkeys, entitySkeys, currencySkeys);
	}
}	

public interface EntityAccountMappingDao {

	public List<EntityAccountMapDefinition> getEntityAcctMapByDims(List<Long> countrySkeys, List<Long> entitySkeys, List<Long> currencySkeys);
}	
