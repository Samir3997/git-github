package com.maybank.ilm.core.dao;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

@Repository
public class LockConfigDaoImpl implements LockConfigDao{

	@Autowired
	EntityManager em;
	
	private static final Logger LOGGER = LogManager.getLogger(LockConfigDaoImpl.class);
	
	@Override
	public Integer updateLockConfig(String lockName, Long trackerId) {
		System.out.println("inside updatelock"+lockName);
		Query query = em.createNativeQuery("UPDATE LOCK_CONFIG set N_LOCK_NUMBER = :trackerId where N_LOCK_NUMBER = 0 and V_LOCK_NAME = :lockName");
		query.setParameter("trackerId", trackerId);
		query.setParameter("lockName", lockName);
		LOGGER.info("before count");
		int count = query.executeUpdate();
		return count;
	}
	
	@Override
	public Integer releaseLockConfig(String lockName) {
		System.out.println("inside releaselock"+lockName);
		Query query = em.createNativeQuery("UPDATE LOCK_CONFIG set N_LOCK_NUMBER = 0 where V_LOCK_NAME = :lockName");
		query.setParameter("lockName", lockName);
		LOGGER.info("before count");
		int count = query.executeUpdate();
		return count;
	}

	@Override
	public Long fetchTrackerId(String lockName) {
		String rawQuery = "select LockConfig.lockNumber from  LockConfig where LockConfig.lockName = :lockName";
		Query query = em.createQuery(rawQuery);
		query.setParameter("lockName", lockName);
		return (Long) query.getSingleResult();
	}
	
	
}
