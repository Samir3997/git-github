package com.maybank.ilm.core.dao;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.maybank.ilm.entity.AccountBalanceManagement;
import com.maybank.ilm.entity.EntityAccountMapDefinition;

@Repository
public class RentasBalancingDaoImpl implements RentasBalancingDao {

	@Autowired
	EntityManager em;

	@Override
	public List<BigDecimal> getRentasBalancingData(final String sqlString, final LocalDate analysisData, final List<Long> eamSkeyList) {
		final Query query = em.createNativeQuery(sqlString);
		query.setParameter("mapSkeyList", eamSkeyList);
		query.setParameter("valueDate", analysisData);
		final List<Object[]> resultList = query.getResultList();
		return this.convertToList(resultList);
	}

	private List<BigDecimal> convertToList(final List<Object[]> resultList) {
		final List<BigDecimal> dataList = new ArrayList<>();
		for (final Object[] obj : resultList) {
			dataList.add((BigDecimal) obj[0]);
			dataList.add((BigDecimal) obj[1]);
		}
		return dataList;
	}
	
	public List<AccountBalanceManagement> getRentasBalancingDrillDown(final String sqlString, final LocalDate analysisData, final Long entityAccountMapSkey) {
		final Query query = em.createNativeQuery(sqlString, AccountBalanceManagement.class);
		query.setParameter("mapSkeyList", Arrays.asList(entityAccountMapSkey));
		query.setParameter("valueDate", analysisData);
		return query.getResultList();
	}
	}
