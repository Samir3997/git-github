@RunWith(MockitoJUnitRunner.class)
public class MXMsgHandlerAbstractImplTest {

    @InjectMocks
    private MXMsgHandlerAbstractImpl mxMsgHandler;

    @Test
    public void testGetBicCodeFromTag72_BicCodePresent() {
        // Arrange
        Block4Tag72 tag72 = new Block4Tag72();
        tag72.setBlock4Tag72Nar1("/CPRO/BNMAMYKL/CPRB/MBBEMYKL");

        // Act
        String bicCode = mxMsgHandler.getBicCodeFromTag72(tag72);

        // Assert
        assertEquals("MBBEMYKL", bicCode);
    }

    @Test
    public void testGetBicCodeFromTag72_BicCodeNotPresent() {
        // Arrange
        Block4Tag72 tag72 = new Block4Tag72();
        tag72.setBlock4Tag72Nar1("Some narrative without CPRB");

        // Act
        String bicCode = mxMsgHandler.getBicCodeFromTag72(tag72);

        // Assert
        assertNull(bicCode);
    }

    @Test
    public void testGetBicCodeFromTag72_MultipleNarratives() {
        // Arrange
        Block4Tag72 tag72 = new Block4Tag72();
        tag72.setBlock4Tag72Nar1("/CPRO/BNMAMYKL/CPRB/MBBEMYKL");
        tag72.setBlock4Tag72Nar2("/OTHER/NARRATIVE");

        // Act
        String bicCode = mxMsgHandler.getBicCodeFromTag72(tag72);

        // Assert
        assertEquals("MBBEMYKL", bicCode);
    }

    @Test
    public void testGetBicCodeFromTag72_Tag72IsNull() {
        // Act
        String bicCode = mxMsgHandler.getBicCodeFromTag72(null);

        // Assert
        assertNull(bicCode);
    }

    @Test
    public void testGetBicCodeFromTag72_BicCodeWithXCharacters() {
        // Arrange
        Block4Tag72 tag72 = new Block4Tag72();
        tag72.setBlock4Tag72Nar1("/CPRO/BNMAMYKL/CPRB/MBBEMYKLX");

        // Act
        String bicCode = mxMsgHandler.getBicCodeFromTag72(tag72);

        // Assert
        assertEquals("MBBEMYKL", bicCode);
    }
}
