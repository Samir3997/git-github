package com.maybank.cac.controller;
import java.util.HashMap;
import java.util.Map;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.reactive.function.client.WebClient;

import reactor.core.publisher.Mono;

@RestController
@RequestMapping("/spring")
public class FlaskIntegrationController {

    private final WebClient webClient;

    public FlaskIntegrationController() {
        // Configure WebClient to call Flask endpoints
        this.webClient = WebClient.builder()
                .baseUrl("http://10.170.116.116:5000") // Flask server base URL
                .build();
    }

    // Endpoint to receive a request from Flask
    @PostMapping("/process")
    public Mono<String> processAndForward(@RequestBody Map<String, Object> flaskRequest) {
        // Step 1: Process the received request
        Map<String, Object> processedRequest = new HashMap<>(flaskRequest);
        processedRequest.put("additionalData", "Processed by Spring Boot");

        // Step 2: Forward the processed request back to Flask
        return webClient.post()
                .uri("/receive_data") // Flask endpoint to receive the processed request
                .contentType(MediaType.APPLICATION_JSON)
                .bodyValue(processedRequest)
                .retrieve()
                .bodyToMono(String.class); // Expect a String response from Flask
    }
}



{
    "Data":"Tot"
}







{
    "message": "Data received",
    "status": [
        "total",
        "total income in reporting currency",
        "total income quarter to date in base currency",
        "total income quarter to date in reporting currency",
        "total income year to date in base currency"
    ]
}



http://localhost:8080/spring/process


















from flask import Flask, request, jsonify

app = Flask(__name__)

# Endpoint to handle the request and send the response
@app.route('/process_request', methods=['POST'])
def process_request():
    try:
        # Parse the incoming request
        request_data = request.json

        # Validate the request contains the expected data
        if request_data.get("Data") != "Tot":
            return jsonify({"error": "Invalid data"}), 400

        # Prepare the response
        response_data = {
            "message": "Data received",
            "status": [
                "total",
                "total income in reporting currency",
                "total income quarter to date in base currency",
                "total income quarter to date in reporting currency",
                "total income year to date in base currency"
            ]
        }

        return jsonify(response_data)

    except Exception as e:
        # Handle any unexpected exceptions
        return jsonify({"error": str(e)}), 500


if __name__ == '__main__':
    # Run the Flask app on port 5000
    app.run(debug=True, host='0.0.0.0', port=5000)









"select * from component_defn ;
select * from component_filter_defn ;
select * from component_request_measures ;
select * from component_hierarchy_defn ;" i have these 4 tables where component_defn is the root table. 
SO from UI if user types I want Total exposure of the current date for country MY.
So here exposure is column in component_request_measures  and date is like some column in component_filter_defn  and country is like some column in 
component_hierarchy_defn .
So below is the column for reference
v_comp_req_measure_formula(component_request_measures  table)=SUM({ Accrued Interest Amount })
V_FILTER_NME(component_filter_defn table)=Extraction Date
V_HIERARCHY_NME(component_hierarchy_defn table)=Account Number.
So here the root table is "component_defn cd which contain one column cd.n_comp_defn_id which is primary column and foreign column in
other above 3 table"
So total i have 4 table.My requirment is i want cd.v_comp_defn_nme,cd.v_comp_defn_id based on user input.
User having 3 option in ui can see,like component_request_measures,component_filter_defn,component_hierarchy_defn.
1)If user only select component_request_measures and its perticular column then we fetch cd.v_comp_defn_nme,cd.v_comp_defn_id based on 
component_defn and  component_request_measures(So here both table will join and v_comp_req_measure_formula will be the condition)
1)If user select component_request_measures,component_filter_defn and both tables perticular column then we fetch cd.v_comp_defn_nme,cd.v_comp_defn_id based on 
component_defn and  component_request_measures and component_filter_defn(So here three table will join and v_comp_req_measure_formula and V_FILTER_NME will be the condition)

similar way for below combination i need query, so its better if we can accumulate below scenario in one query

1) component_defn and  component_request_measures
2)component_defn and component_filter_defn
3)component_defn and component_hierarchy_defn
4)component_defn ,component_request_measures,component_filter_defn
5)component_defn ,component_request_measures,component_hierarchy_defn
6)component_defn ,component_request_measures,component_hierarchy_defn
7)component_defn ,component_request_measures,component_filter_defn,component_hierarchy_defn






select cd.v_comp_defn_nme,cd.v_comp_defn_id,cd.n_comp_defn_id from COMPONENT_REQUEST_MEASURES crm
inner join component_defn cd on cd.n_comp_defn_id=crm.n_comp_defn_id
 where crm.v_comp_req_measure_formula like '%SUM(FCT_CONSOLIDATED_ACCT_SUMMARY.N_EOP_PRIN_BAL)*1%';

select cd.v_comp_defn_nme,cd.v_comp_defn_id,cd.n_comp_defn_id from COMPONENT_REQUEST_MEASURES crm
inner join COMPONENT_FILTER_DEFN  cfd on  cfd.n_comp_defn_id=crm.n_comp_defn_id
inner join component_defn cd on cd.n_comp_defn_id=cfd.n_comp_defn_id
 where crm.v_comp_req_measure_formula like '%SUM(FCT_CONSOLIDATED_ACCT_SUMMARY.N_EOP_PRIN_BAL)*1%';
 
 
 select cd.v_comp_defn_nme,cd.v_comp_defn_id,cd.n_comp_defn_id from COMPONENT_REQUEST_MEASURES crm
inner join COMPONENT_FILTER_DEFN  cfd on  cfd.n_comp_defn_id=crm.n_comp_defn_id
inner join component_defn cd on cd.n_comp_defn_id=cfd.n_comp_defn_id
inner join COMPONENT_HIERARCHY_DEFN chd on chd.n_comp_defn_id=cd.n_comp_defn_id
 where crm.v_comp_req_measure_formula like '%SUM(FCT_CONSOLIDATED_ACCT_SUMMARY.N_EOP_PRIN_BAL)*1%';
