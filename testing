
http://10.172.120.19:8013/ilm-web//fcyntmainagent?countrySkey=1&entitySkey=1&currencySkey=41&timeZone=Asia/Kuala_Lumpur

countrySkey=1&entitySkey=1&currencySkey=41&timeZone=Asia/Kuala_Lumpur

{
    "timeSpendsInSeconds": 1,
    "status": "SUCCESS",
    "serviceName": "getMainAgentTransactions",
    "t": {
        "trade": [
            {
                "displayLabel": "Citibank NY",
                "entityAcctMapSkey": 21,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "JP Morgan Chase NY",
                "entityAcctMapSkey": 22,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of America NY",
                "entityAcctMapSkey": 25,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Wells Fargo Bank NY",
                "entityAcctMapSkey": 26,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Deutsche Bank NY",
                "entityAcctMapSkey": 27,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of New York",
                "entityAcctMapSkey": 30,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Standard Chartered Bank NY",
                "entityAcctMapSkey": 31,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Citi HK",
                "entityAcctMapSkey": 41,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "MAYBANK NEW YORK",
                "entityAcctMapSkey": 221,
                "txnTypeCode": "TRADE",
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            }
        ],
        "custody": [
            {
                "displayLabel": "Citibank NY",
                "entityAcctMapSkey": 21,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "JP Morgan Chase NY",
                "entityAcctMapSkey": 22,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of America NY",
                "entityAcctMapSkey": 25,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Wells Fargo Bank NY",
                "entityAcctMapSkey": 26,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Deutsche Bank NY",
                "entityAcctMapSkey": 27,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of New York",
                "entityAcctMapSkey": 30,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Standard Chartered Bank NY",
                "entityAcctMapSkey": 31,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Citi HK",
                "entityAcctMapSkey": 41,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "MAYBANK NEW YORK",
                "entityAcctMapSkey": 221,
                "txnTypeCode": "CUSTODY",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            }
        ],
        "rdp": [
            {
                "displayLabel": "Citibank NY",
                "entityAcctMapSkey": 21,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "JP Morgan Chase NY",
                "entityAcctMapSkey": 22,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of America NY",
                "entityAcctMapSkey": 25,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Wells Fargo Bank NY",
                "entityAcctMapSkey": 26,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Deutsche Bank NY",
                "entityAcctMapSkey": 27,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of New York",
                "entityAcctMapSkey": 30,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Standard Chartered Bank NY",
                "entityAcctMapSkey": 31,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "Citi HK",
                "entityAcctMapSkey": 41,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            },
            {
                "displayLabel": "MAYBANK NEW YORK",
                "entityAcctMapSkey": 221,
                "txnTypeCode": "RDP",
                "inwardAmount": null,
                "outwardAmount": 0,
                "nettAmount": 0
            }
        ],
        "inward": [
            {
                "displayLabel": "Citibank NY",
                "entityAcctMapSkey": 21,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "JP Morgan Chase NY",
                "entityAcctMapSkey": 22,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of America NY",
                "entityAcctMapSkey": 25,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "Wells Fargo Bank NY",
                "entityAcctMapSkey": 26,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "Deutsche Bank NY",
                "entityAcctMapSkey": 27,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "Bank of New York",
                "entityAcctMapSkey": 30,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "Standard Chartered Bank NY",
                "entityAcctMapSkey": 31,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "Citi HK",
                "entityAcctMapSkey": 41,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            },
            {
                "displayLabel": "MAYBANK NEW YORK",
                "entityAcctMapSkey": 221,
                "txnTypeCode": "INWARD",
                "inwardAmount": 0,
                "outwardAmount": null,
                "nettAmount": 0
            }
        ],
        "deptWiseManualInput": [
            {
                "displayLabel": "TRADE",
                "fcyManualInwardAmount": 0,
                "fcyManualOutwardAmount": 0,
                "fcyManualNettAmount": 0
            },
            {
                "displayLabel": "CUSTODY",
                "fcyManualInwardAmount": 0,
                "fcyManualOutwardAmount": 0,
                "fcyManualNettAmount": 0
            },
            {
                "displayLabel": "RDP",
                "fcyManualInwardAmount": 0,
                "fcyManualOutwardAmount": 0,
                "fcyManualNettAmount": 0
            },
            {
                "displayLabel": "INWARD",
                "fcyManualInwardAmount": 0,
                "fcyManualOutwardAmount": 0,
                "fcyManualNettAmount": 0
            },
            {
                "displayLabel": "TREASURY",
                "fcyManualInwardAmount": 0,
                "fcyManualOutwardAmount": 0,
                "fcyManualNettAmount": 0
            },
            {
                "displayLabel": "OTHERS",
                "fcyManualInwardAmount": 0,
                "fcyManualOutwardAmount": 0,
                "fcyManualNettAmount": 0
            }
        ],
        "totalFCYNTAmount": [
            {
                "displayLabel": null,
                "entityAcctMapSkey": null,
                "txnTypeCode": null,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "nettAmount": 0
            }
        ]
    }
}







@Controller
@RequestMapping("/")
public class FCYBlotterController {
	@GetMapping(value = "/fcyntmainagent")
	@ResponseBody
	@CrossOrigin("${cors.urls}")
	public ResponseEntity<CommonResponseEntity<FCYNTMainAgentDTO>> getMainAgentTransactions(
			@RequestParam Long countrySkey, @RequestParam Long entitySkey, @RequestParam Long currencySkey,
			@RequestParam String timeZone, @RequestParam(required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate selectedDate) {
		LOGGER.info("FCYBlotterController getMainAgentTransactions");
		final FCYNTMainAgentDTO result = fcyBlotterService.getMainAgentTransactions(countrySkey, entitySkey,
				currencySkey, timeZone, selectedDate);
		return new ResponseEntity<>(
				new CommonResponseEntity<FCYNTMainAgentDTO>(1l, success, "getMainAgentTransactions", result),
				HttpStatus.OK);
	}
}	




public interface FCYBlotterService {

	FCYNTMainAgentDTO getMainAgentTransactions(Long countrySkey, Long entitySkey, Long currencySkey, String timeZone, LocalDate selectedDate);

}


@Service
public class FCYBlotterServiceImpl implements FCYBlotterService {

	@Override
	public FCYNTMainAgentDTO getMainAgentTransactions(final Long countrySkey, final Long entitySkey,
			final Long currencySkey, final String timeZone, LocalDate selectedDate) {
		final LocalDateTime valueDtTime = DateUtil.getCurrentDateTimeByZone(timeZone);
		final LocalDate valueDate = selectedDate != null ? selectedDate : valueDtTime.toLocalDate();
		final List<EntityAccountMapDefinition> entityAcctMapDefs = entityAccountMappingRepo
				.findByEntitySkeyAndCountrySkeyAndCurrencySkey(entitySkey, countrySkey, currencySkey);
		final List<Long> notToCalcProjectedAmt = entityAcctMapDefs.stream().
				filter(eam->  Objects.equals(eam.getProjectedAmountCalculationInd(), ILMCoreConstants.NIND)).
				map(eamSkey->eamSkey.getEntityAcctMapSkey()).collect(Collectors.toList());
		final EntityAccountMapDefinition mainAgent = entityAcctMapDefs.stream()//NOSONAR
				.filter(e -> ILMCoreConstants.MainAgent.equals(e.getTypeOfNostroAgent())).findFirst().get();//NOSONAR
		LOGGER.info("Main Agent {}", mainAgent);
		final List<EntityAccountMapDefinition> subAgents = entityAcctMapDefs.stream()
				.filter(e -> ILMCoreConstants.SubAgent.equals(e.getTypeOfNostroAgent())).collect(Collectors.toList());
		LOGGER.info("Sub Agents {}", subAgents);
		return this.prepareFCYNTMainAgentDTO(valueDate, mainAgent, subAgents,notToCalcProjectedAmt);
	}
	
	
	
	private FCYNTMainAgentDTO prepareFCYNTMainAgentDTO(final LocalDate valueDate,
			final EntityAccountMapDefinition mainAgent, final List<EntityAccountMapDefinition> subAgents,final List<Long> notToCalcProjectedAmt) {
		final FCYNTMainAgentDTO fcyNTMainAgentDTO = new FCYNTMainAgentDTO();
		final List<FCYNTAgentAccumAmtDTO> trades = new ArrayList<FCYNTAgentAccumAmtDTO>();
		final List<FCYNTAgentAccumAmtDTO> custody = new ArrayList<FCYNTAgentAccumAmtDTO>();
		final List<FCYNTAgentAccumAmtDTO> rdp = new ArrayList<FCYNTAgentAccumAmtDTO>();
		final List<FCYNTAgentAccumAmtDTO> inward = new ArrayList<FCYNTAgentAccumAmtDTO>();
		final List<FCYBlotterManualEntryDTO> departWiseManualAmount = new ArrayList<FCYBlotterManualEntryDTO>();
		final FCYBlotterManualEntryDTO tradeManual = this.getFcyManualInput(valueDate, mainAgent.getEntityAcctMapSkey(),
				ILMCoreConstants.TRADE);
		final FCYBlotterManualEntryDTO custodyManual = this.getFcyManualInput(valueDate,
				mainAgent.getEntityAcctMapSkey(), ILMCoreConstants.CUSTODY);
		final FCYBlotterManualEntryDTO rdpManual = this.getFcyManualInput(valueDate, mainAgent.getEntityAcctMapSkey(),
				ILMCoreConstants.RDP);
		final FCYBlotterManualEntryDTO inwardManual = this.getFcyManualInput(valueDate,
				mainAgent.getEntityAcctMapSkey(), ILMCoreConstants.INWARD);
		final FCYBlotterManualEntryDTO treasuryManual = this.getFcyManualInput(valueDate,
				mainAgent.getEntityAcctMapSkey(), ILMCoreConstants.TREASURY);
		final FCYBlotterManualEntryDTO othersManual = this.getFcyManualInput(valueDate,
				mainAgent.getEntityAcctMapSkey(), ILMCoreConstants.OTHERS);
		departWiseManualAmount.add(tradeManual);
		departWiseManualAmount.add(custodyManual);
		departWiseManualAmount.add(rdpManual);
		departWiseManualAmount.add(inwardManual);
		departWiseManualAmount.add(treasuryManual);
		departWiseManualAmount.add(othersManual);
		trades.add(this.prepareTradeAgentAccumulatedAmount(valueDate, mainAgent, ILMCoreConstants.MainAgent));
		custody.add(this.prepareCustodyAgentAccumulatedAmount(valueDate, mainAgent, ILMCoreConstants.MainAgent));
		rdp.add(this.prepareRDPAgentAccumulatedAmount(valueDate, mainAgent, ILMCoreConstants.MainAgent));
		inward.add(this.prepareAgentInwardAccumulatedAmount(valueDate, mainAgent, ILMCoreConstants.MainAgent));
		subAgents.stream().forEach(subAgent -> {
			trades.add(this.prepareTradeAgentAccumulatedAmount(valueDate, subAgent, ILMCoreConstants.MainAgent));
			custody.add(this.prepareCustodyAgentAccumulatedAmount(valueDate, subAgent, ILMCoreConstants.MainAgent));
			rdp.add(this.prepareRDPAgentAccumulatedAmount(valueDate, subAgent,ILMCoreConstants.MainAgent));
			inward.add(this.prepareAgentInwardAccumulatedAmount(valueDate, subAgent, ILMCoreConstants.MainAgent));
		});
		fcyNTMainAgentDTO.setTrade(trades);
		fcyNTMainAgentDTO.setCustody(custody);
		fcyNTMainAgentDTO.setRdp(rdp);
		fcyNTMainAgentDTO.setInward(inward);
		fcyNTMainAgentDTO.setDeptWiseManualInput(departWiseManualAmount);
		fcyNTMainAgentDTO.setTotalFCYNTAmount(this.calculateTotalFCYNAmount(fcyNTMainAgentDTO,notToCalcProjectedAmt));
		return fcyNTMainAgentDTO;
	}

}

public interface EntityAccountMappingRepo extends JpaRepository<EntityAccountMapDefinition, Long> {
public List<EntityAccountMapDefinition> findByEntitySkeyAndCountrySkeyAndCurrencySkey(Long entitySkey, Long countrySkey, Long currencySkey);
}
