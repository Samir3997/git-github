
http://10.172.120.19:8013/ilm-web//getTreasuryDataForNostro?entitySkey=1&currency=USD&currencySkey=41&countrySkey=1&Indicator=User&timeZone=Asia/Kuala_Lumpur&entityAcctMapSkey=21&typeOfAgent=Main%20Agent&bicCode=CITIUS33



entitySkey=1&currency=USD&currencySkey=41&countrySkey=1&Indicator=User&timeZone=Asia/Kuala_Lumpur&entityAcctMapSkey=21&typeOfAgent=Main%20Agent&bicCode=CITIUS33


{
    "timeSpendsInSeconds": 1,
    "status": "SUCCESS",
    "serviceName": "getTreasuryDataForNostro",
    "t": {
        "treasuryData": [
            {
                "unit": "Conventional",
                "refLable": null,
                "inFlowAmout": 0,
                "outFlowAmout": 0,
                "nettAmout": 0,
                "openingBal": null,
                "inwardAmount": null,
                "outwardAmount": null,
                "projectBal": null,
                "sweepingAmount": null,
                "minReserveBal": null,
                "entityAccMapSkey": null
            },
            {
                "unit": "Islamic",
                "refLable": null,
                "inFlowAmout": 0,
                "outFlowAmout": 0,
                "nettAmout": 0,
                "openingBal": null,
                "inwardAmount": null,
                "outwardAmount": null,
                "projectBal": null,
                "sweepingAmount": null,
                "minReserveBal": null,
                "entityAccMapSkey": null
            },
            {
                "unit": "Protocoll",
                "refLable": null,
                "inFlowAmout": 0,
                "outFlowAmout": 0,
                "nettAmout": 0,
                "openingBal": null,
                "inwardAmount": null,
                "outwardAmount": null,
                "projectBal": null,
                "sweepingAmount": null,
                "minReserveBal": null,
                "entityAccMapSkey": null
            },
            {
                "unit": "Euroclear",
                "refLable": null,
                "inFlowAmout": 0,
                "outFlowAmout": 0,
                "nettAmout": 0,
                "openingBal": null,
                "inwardAmount": null,
                "outwardAmount": null,
                "projectBal": null,
                "sweepingAmount": null,
                "minReserveBal": null,
                "entityAccMapSkey": null
            },
            {
                "unit": "Treasury Mail",
                "refLable": null,
                "inFlowAmout": 0,
                "outFlowAmout": 0,
                "nettAmout": 0,
                "openingBal": null,
                "inwardAmount": null,
                "outwardAmount": null,
                "projectBal": null,
                "sweepingAmount": null,
                "minReserveBal": null,
                "entityAccMapSkey": null
            }
        ],
        "swpeeingAmount": [
            {
                "unit": null,
                "refLable": "JP Morgan Chase NY",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 14488240.52,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 14488240.52,
                "sweepingAmount": 0,
                "minReserveBal": 5000,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "Bank of America NY",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 1444123.17,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 1444123.17,
                "sweepingAmount": 0,
                "minReserveBal": 800,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "Wells Fargo Bank NY",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 6448730.51,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 6448730.51,
                "sweepingAmount": 0,
                "minReserveBal": 0,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "Deutsche Bank NY",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 400500.33,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 400500.33,
                "sweepingAmount": 0,
                "minReserveBal": 0,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "Bank of New York",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 20656366.68,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 20656366.68,
                "sweepingAmount": 0,
                "minReserveBal": 0,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "Standard Chartered Bank NY",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 4126031.91,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 4126031.91,
                "sweepingAmount": 0,
                "minReserveBal": 0,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "Citi HK",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 0,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 0,
                "sweepingAmount": 0,
                "minReserveBal": 0,
                "entityAccMapSkey": null
            },
            {
                "unit": null,
                "refLable": "MAYBANK NEW YORK",
                "inFlowAmout": null,
                "outFlowAmout": null,
                "nettAmout": null,
                "openingBal": 6192873.28,
                "inwardAmount": 0,
                "outwardAmount": 0,
                "projectBal": 6192873.28,
                "sweepingAmount": 0,
                "minReserveBal": 4000000,
                "entityAccMapSkey": null
            }
        ]
    }
}









@Controller
@RequestMapping("/")
public class FCYBlotterController {
@GetMapping(value = "/getTreasuryDataForNostro")
	@ResponseBody
	@CrossOrigin("${cors.urls}")
	public ResponseEntity<CommonResponseEntity<FCYTreasuryDTO>> getTreasuryDataForNostro(
			@RequestParam String entitySkey, @RequestParam String currency, @RequestParam String currencySkey,
			@RequestParam String countrySkey, @RequestParam String Indicator, @RequestParam String timeZone, @RequestParam Long entityAcctMapSkey , @RequestParam String typeOfAgent , @RequestParam String bicCode,
			@RequestParam(required = false) @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate selectedDate) {
		LOGGER.info("FCYBlotterController {} getTreasuryDataForNostro");
		FCYTreasuryDTO result = fcyBlotterService.getTreasuryAndKplusData(entitySkey, currency, currencySkey, countrySkey,
				Indicator, timeZone, entityAcctMapSkey ,typeOfAgent,bicCode, selectedDate);
		return new ResponseEntity<>(
				new CommonResponseEntity<FCYTreasuryDTO>(1L, success, "getTreasuryDataForNostro", result),
				HttpStatus.OK);
	}
}

public interface FCYBlotterService {
public FCYTreasuryDTO getTreasuryAndKplusData(String entitySkey, String currency, String currencySkey, String countrySkey,
			String Indicator, String timeZone, Long entityAcctMapSkey, String typeOfAgent, String bicCode, LocalDate selectedDate);

}

@Service
public class FCYBlotterServiceImpl implements FCYBlotterService {
@Override
	public FCYTreasuryDTO getTreasuryAndKplusData(final String entitySkey, final String currency, final String currencySkey,
			final String countrySkey, final String Indicator, final String timeZone, final Long entityAcctMapSkey, final String typeOfAgent, final String bicCode,
			final LocalDate selectedDate) {
		final FCYTreasuryDTO fCYTreasuryDTO = new FCYTreasuryDTO();
    	fCYTreasuryDTO.setTreasuryData(this.prepareKplusSumOfIncomingOutgoingAmount(entitySkey, currency, entityAcctMapSkey, timeZone, "User", typeOfAgent, bicCode, selectedDate));
		fCYTreasuryDTO.setSwpeeingAmount(this.prepareSweepingTreasuryData(Long.parseLong(countrySkey),
				Long.parseLong(entitySkey), Long.parseLong(currencySkey), Indicator, timeZone, selectedDate));
		return fCYTreasuryDTO;

	}
}

public class FCYTreasuryDTO {

	private List<FCYTreasuryDataDTO> treasuryData;
	private List<FCYTreasuryDataDTO> swpeeingAmount;
	public List<FCYTreasuryDataDTO> getTreasuryData() {
		return treasuryData;
	}
	public void setTreasuryData(List<FCYTreasuryDataDTO> treasuryData) {
		this.treasuryData = treasuryData;
	}
	public List<FCYTreasuryDataDTO> getSwpeeingAmount() {
		return swpeeingAmount;
	}
	public void setSwpeeingAmount(List<FCYTreasuryDataDTO> swpeeingAmount) {
		this.swpeeingAmount = swpeeingAmount;
	}
	
	
	
    
}
