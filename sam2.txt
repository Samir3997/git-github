package com.maybank.ilm.junit.swiftmsghandlers;
import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.mockito.Mockito.when;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;
import org.mockito.MockitoAnnotations;

import com.maybank.ilm.core.swiftmsghandlers.MXcamt05400108Handler;
import com.maybank.ilm.core.util.ILMCoreConstants;
import com.maybank.ilm.junit.config.AbstractServiceTest;
import com.prowidesoftware.swift.model.mx.MxCamt05400108;
import com.prowidesoftware.swift.model.mx.dic.AccountNotification17;
import com.prowidesoftware.swift.model.mx.dic.ActiveOrHistoricCurrencyAndAmount;
import com.prowidesoftware.swift.model.mx.dic.BankToCustomerDebitCreditNotificationV08;
import com.prowidesoftware.swift.model.mx.dic.CreditDebitCode;
import com.prowidesoftware.swift.model.mx.dic.ReportEntry10;

public class MXcamt05400108HandlerTest extends AbstractServiceTest{
	private MXcamt05400108Handler handler;
    private MxCamt05400108 mxMessage;

    @Before
    public void setUp() {
         MockitoAnnotations.initMocks(this);
         handler = new MXcamt05400108Handler();
         mxMessage = new MxCamt05400108();
     }
    @Test
  public  void testSaveToAcctBalMgmtAndMapping() {
    	BankToCustomerDebitCreditNotificationV08 notification = new BankToCustomerDebitCreditNotificationV08();
        List<AccountNotification17> notifications = new ArrayList<>();
        AccountNotification17 accountNotification = new AccountNotification17();
        List<ReportEntry10> entries = new ArrayList<>();
        ReportEntry10 entry = new ReportEntry10();
        ActiveOrHistoricCurrencyAndAmount amount = new ActiveOrHistoricCurrencyAndAmount();
        amount.setCcy("MYR");
        amount.setValue(BigDecimal.valueOf(1000));
        entry.setAmt(amount);
        entry.setCdtDbtInd(CreditDebitCode.DBIT);
        entries.add(entry);
        accountNotification.getNtry().add(entry);
        notifications.add(accountNotification);
        notification.getNtfctn().add(accountNotification);
        mxMessage.setBkToCstmrDbtCdtNtfctn(notification);
        handler.saveToAcctBalMgmtAndMapping(mxMessage, 12345L);

    }

    @Test
   public void testGetMessageType() {
        String messageType = handler.getMessageType();
        assertEquals(ILMCoreConstants.MXTYPECAMT05400108, messageType);
    }
}
